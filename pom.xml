<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>soonhyuk.yoon</groupId>
	<artifactId>http-rest-proxy</artifactId>
	<name>http-rest-proxy</name>
	<version>1.0.0</version>

	<!--
		주의: package 하고 싶은 방식을 선택해야 합니다.
		1) 외부 Tomcat에 배포: war
		2) Spring Boot 응용 프로그램: jar
	-->
	<packaging>jar</packaging>

	<description>HTTP REST API Proxy Server Application</description>

	<properties>
		<!-- java -->
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>

		<!-- maven test -->
		<maven.test.skip>true</maven.test.skip>
		<maven.test.failure.ignore>true</maven.test.failure.ignore>
		<maven.javadoc.skip>true</maven.javadoc.skip>

		<!-- source directory properties -->
		<source.directory>src/main/java</source.directory>
		<resource.directory>src/main/resources</resource.directory>

		<failOnMissingWebXml>false</failOnMissingWebXml>
		<spring.boot.start.class>soonhyuk.yoon.http.proxy.boot.Application</spring.boot.start.class>

		<!-- library version -->

		<!-- Spring -->
		<org.springframework.boot.version>1.3.8.RELEASE</org.springframework.boot.version>
		
		<!-- SLF4J (Logback) -->
		<slf4j.version>1.7.6</slf4j.version>
		<logback.version>1.0.13</logback.version>

		<!-- Apache Commons -->
		<common.io.version>2.4</common.io.version>
		<common-lang.version>3.4</common-lang.version>

		<!-- HttpComponents -->
		<httpclient.version>4.3.6</httpclient.version>
	</properties>

	<dependencies>
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${org.springframework.boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${org.springframework.boot.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- SLF4J & JCL-OVER-SLF4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<!-- Http Client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
			<!-- Exclude Commons Logging in favor of SLF4j -->
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- common IO -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${common.io.version}</version>
		</dependency>

		<!-- commons LANG -->
		<dependency>
			<groupId>org.apache.commons</groupId>
  			<artifactId>commons-lang3</artifactId>
  			<version>${common-lang.version}</version>
		</dependency>

		<!-- commons Codec -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>

		<!-- Guava: Google Core Libraries for Java 1.6+ -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>

		<!-- 이거쓸려다 방향 선회
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-proxy</artifactId>
			<version>9.2.14.v20151106</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.mitre.dsmiley.httpproxy</groupId>
			<artifactId>smiley-http-proxy-servlet</artifactId>
			<version>1.9</version>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${source.directory}</sourceDirectory>
		<resources>
			<resource>
				<directory>${resource.directory}</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
					<overwrite>true</overwrite>
				</configuration>
				<version>2.7</version>
			</plugin>

			<!-- Spring Boot Plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${org.springframework.boot.version}</version>
				<configuration>
					<mainClass>${spring.boot.start.class}</mainClass>
				</configuration>
				<executions>
				    <execution>
				        <goals>
				            <goal>repackage</goal>
				        </goals>
				    </execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-maven-release</id>
			<name>Spring Maven Release Repository</name>
			<url>http://maven.springframework.org/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven-central</id>
			<url>http://search.maven.org/</url>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>
</project>